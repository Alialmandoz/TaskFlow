# Generated by Django 5.2 on YYYY-MM-DD HH:MM (placeholder, will be updated by Django)

from django.db import migrations
from decimal import Decimal

def populate_currencies_and_rates(apps, schema_editor):
    Transaction = apps.get_model('accounting', 'Transaction')
    # Using .iterator() to handle potentially large datasets efficiently
    for transaction in Transaction.objects.all().iterator():
        transaction.currency = 'ARS'
        # Ensure original_amount is populated even if amount is None, though amount shouldn't be None.
        # If amount is None, original_amount will also be None, which is fine as it's temporarily nullable.
        transaction.original_amount = transaction.amount 
        transaction.exchange_rate_usd = Decimal('1200.0000') # Store with 4 decimal places as per model
        transaction.save(update_fields=['currency', 'original_amount', 'exchange_rate_usd'])

class Migration(migrations.Migration):

    dependencies = [
        ('accounting', '0003_transaction_currency_transaction_exchange_rate_usd_and_more'),
    ]

    operations = [
        migrations.RunPython(populate_currencies_and_rates),
    ]
